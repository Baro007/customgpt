# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .subscription_response import SubscriptionResponse


class User(UncheckedBaseModel):
    subscription: SubscriptionResponse
    is_new_user: bool
    xi_api_key: str
    can_use_delayed_payment_methods: bool
    is_onboarding_completed: bool
    is_onboarding_checklist_completed: bool
    first_name: typing.Optional[str] = None
    is_api_key_hashed: typing.Optional[bool] = None
    xi_api_key_preview: typing.Optional[str] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
