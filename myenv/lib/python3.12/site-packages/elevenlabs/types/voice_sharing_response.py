# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .category import Category
from .review_status import ReviewStatus
from .voice_sharing_state import VoiceSharingState


class VoiceSharingResponse(UncheckedBaseModel):
    status: typing.Optional[VoiceSharingState] = None
    history_item_sample_id: typing.Optional[str] = None
    date_unix: typing.Optional[int] = None
    whitelisted_emails: typing.Optional[typing.List[str]] = None
    public_owner_id: typing.Optional[str] = None
    original_voice_id: typing.Optional[str] = None
    financial_rewards_enabled: typing.Optional[bool] = None
    free_users_allowed: typing.Optional[bool] = None
    live_moderation_enabled: typing.Optional[bool] = None
    rate: typing.Optional[float] = None
    notice_period: typing.Optional[int] = None
    disable_at_unix: typing.Optional[int] = None
    voice_mixing_allowed: typing.Optional[bool] = None
    featured: typing.Optional[bool] = None
    category: typing.Optional[Category] = None
    reader_app_enabled: typing.Optional[bool] = None
    ban_reason: typing.Optional[str] = None
    liked_by_count: typing.Optional[int] = None
    cloned_by_count: typing.Optional[int] = None
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    labels: typing.Optional[typing.Dict[str, str]] = None
    review_status: typing.Optional[ReviewStatus] = None
    review_message: typing.Optional[str] = None
    enabled_in_library: typing.Optional[bool] = None
    instagram_username: typing.Optional[str] = None
    twitter_username: typing.Optional[str] = None
    youtube_username: typing.Optional[str] = None
    tiktok_username: typing.Optional[str] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
